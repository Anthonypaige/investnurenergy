---
import Image from '~/components/common/Image.astro';
import Button from '~/components/ui/Button.astro';
import type { CallToAction } from '~/types';

export interface Props {
  id?: string;
  title?: string;
  subtitle?: string;
  content?: string;
  actions?: string | CallToAction[];
  image?: string | any;
}

const {
  id,
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  content = await Astro.slots.render('content'),
  actions = await Astro.slots.render('actions'),
  image = await Astro.slots.render('image'),

} = Astro.props;

---

  

<section class="relative md:-mt-[76px] not-prose" {...id ? { id } : {}}></section>

        
        <!-- Jumbotron -->
<div class="relative overflow-hidden bg-cover bg-no-repeat" style="
background-position: 50%;
background-image: url('https://github.com/Anthonypaige/investnurenergy/blob/main/public/images/page-art/hot-water-hero.png?raw=true');
height: 500px;
">

<div class="flex h-full items-center justify-center">
  <div class="text-center mx-auto">
    <h1 class="mt-2 mb-2 text-5xl font-bold tracking-tight md:text-6xl xl:text-7xl">
      <span class="text-green-700">Energy</span> Efficient
    </h1>
    <h2 class="mb-16 text-5xl font-bold tracking-tight md:text-6xl xl:text-7xl">
      Water Heaters
    </h2>
    <button type="button" class="rounded-full bg-blue-800 text-white px-6 py-2 text-sm font-medium uppercase transition duration-150 ease-in-out hover:bg-blue-900 focus:bg-blue-600 focus:outline-none focus:ring-0 active:bg-blue-700" data-te-ripple-init data-te-ripple-color="light">
      Tax code 25D
    </button>
  </div>
</div>
</div>
</div>
</div>

        {title && <h1 class="text-5xl md:text-6xl font-bold leading-tighter tracking-tighter mb-4 font-heading dark:text-gray-200" set:html={title} />}
        <div class="max-w-3xl mx-auto">
          {subtitle && <p class="text-xl text-muted mb-6 dark:text-slate-300" set:html={subtitle} />}
          {actions && (
            <div class="max-w-xs sm:max-w-md m-auto flex flex-nowrap flex-col sm:flex-row sm:justify-center gap-4">
              {Array.isArray(actions) ? (
                actions.map((action) => (
                  <div class="flex w-full sm:w-auto">
                    <Button {...(action || {})} class="w-full sm:mb-0" />
                  </div>
                ))
              ) : (
                <Fragment set:html={actions} />
              )}
            </div>
          )}
        </div>
        {content && <Fragment set:html={content} />}
      </div>
      <div>
        {image && (
  <div class="relative m-auto max-w-full">
    {typeof image === 'string' ? (
      <Fragment set:html={image} />
    ) : (
      <Image
        class="mx-auto rounded-md w-full h-[400px] object-cover"
        widths={[400, 768, 1024, 2040]}
        sizes="(max-width: 767px) 400px, (max-width: 1023px) 768px, (max-width: 2039px) 1024px, 2040px"
        loading="eager"
        width={1024}
        height={576}
        {...image}
      />
    )}
  </div>
)}
</div>
</div>
</div>
</section>
