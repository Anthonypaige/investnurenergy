---
import Image from '~/components/common/Image.astro';
import Button from '~/components/ui/Button.astro';
import type { CallToAction } from '~/types';

export interface Props {
  id?: string;
  title?: string;
  subtitle?: string;
  tagline?: string;
  content?: string;
  actions?: string | CallToAction[];
  image?: string | any;
  videoSrc?: string; // New property for video source
}

const {
  id,
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,
  content = await Astro.slots.render('content'),
  actions = await Astro.slots.render('actions'),
  image = await Astro.slots.render('image'),

} = Astro.props;

---
<section class="relative md:-mt-[76px] not-prose" {...id ? { id } : {}}>
  


  <div class="absolute inset-0 pointer-events-none" aria-hidden="true"></div>
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6">
    <div class="pt-0 md:pt-[76px] pointer-events-none"></div>
    <div class="py-12 md:py-14">
      <div class="text-center pb-10 md:pb-16 max-w-5xl mx-auto">
        <!-- Jumbotron -->
<div class="relative overflow-hidden bg-cover bg-no-repeat" style="
background-position: 50%;
background-image: url('https://mdbcdn.b-cdn.net/img/new/slides/146.webp');
height: 500px;
">
<div
class="absolute top-0 right-0 bottom-0 left-0 h-full w-full overflow-hidden bg-[hsla(0,0%,0%,0.75)] bg-fixed">
<div class="flex h-full items-center justify-center">
<div class="px-6 text-center text-white md:px-12">
  <h1 class="mt-2 mb-16 text-5xl font-bold tracking-tight md:text-6xl xl:text-7xl">
    The best offer on the market <br /><span>for your business</span>
  </h1>
  <button type="button"
    class="rounded border-2 border-neutral-50 px-[46px] pt-[14px] pb-[12px] text-sm font-medium uppercase leading-normal text-neutral-50 transition duration-150 ease-in-out hover:border-neutral-100 hover:bg-neutral-100 hover:bg-opacity-10 hover:text-neutral-100 focus:border-neutral-100 focus:text-neutral-100 focus:outline-none focus:ring-0 active:border-neutral-200 active:text-neutral-200"
    data-te-ripple-init data-te-ripple-color="light">
    Get started
  </button>
</div>
</div>
</div>
</div>

        {title && <h1 class="text-5xl md:text-6xl font-bold leading-tighter tracking-tighter mb-4 font-heading dark:text-gray-200" set:html={title} />}
        <div class="max-w-3xl mx-auto">
          {subtitle && <p class="text-xl text-muted mb-6 dark:text-slate-300" set:html={subtitle} />}
          {actions && (
            <div class="max-w-xs sm:max-w-md m-auto flex flex-nowrap flex-col sm:flex-row sm:justify-center gap-4">
              {Array.isArray(actions) ? (
                actions.map((action) => (
                  <div class="flex w-full sm:w-auto">
                    <Button {...(action || {})} class="w-full sm:mb-0" />
                  </div>
                ))
              ) : (
                <Fragment set:html={actions} />
              )}
            </div>
          )}
        </div>
        {content && <Fragment set:html={content} />}
      </div>
      <div>
        {image && (
  <div class="relative m-auto max-w-full">
    {typeof image === 'string' ? (
      <Fragment set:html={image} />
    ) : (
      <Image
        class="mx-auto rounded-md w-full h-[400px] object-cover"
        widths={[400, 768, 1024, 2040]}
        sizes="(max-width: 767px) 400px, (max-width: 1023px) 768px, (max-width: 2039px) 1024px, 2040px"
        loading="eager"
        width={1024}
        height={576}
        {...image}
      />
    )}
  </div>
)}
</div>
</div>
</div>

</section>
