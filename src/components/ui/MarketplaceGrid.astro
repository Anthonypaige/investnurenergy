---
// Import necessary components and types
import { twMerge } from 'tailwind-merge';
import type { Card } from '~/types';
import Button from './Button.astro';

// Unpack the props passed to this component
const { items = [], columns, classes = {} } = Astro.props as { items: Card[], columns: number, classes: any };

// Default classes for different parts of the card, can be overridden by passed `classes`
const {
  container: containerClass = 'max-w-5xl mx-auto px-4',
  card: cardClass = 'overflow-hidden shadow-lg rounded-lg',
  title: titleClass = 'text-2xl font-bold text-white h-16',
  image: imageClass = 'transition-transform duration-300 ease-in-out hover:scale-105 w-full h-64 object-cover mb-4 rounded',
  topSellingPoints: topSellingPointsClass = 'text-lg text-white mb-1 truncate w-96',
  avgPrice: avgPriceClass = 'text-xl font-semibold mb-2 text-green-600 pr-8 pb-4',
} = classes;
---

<style>
/* Custom styles for responsiveness and other styling */
@media (max-width: 640px) {
  .container {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
  }
  
  .card {
    margin-left: auto;
    margin-right: auto;
  }
}
</style>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

{
  items && (
    <div class={twMerge(`grid gap-8 md:gap-y-12 max-w-custom ${columns === 4 ? 'lg:grid-cols-4 md:grid-cols-3 sm:grid-cols-2' : columns === 3 ? 'lg:grid-cols-3 sm:grid-cols-2' : columns === 2 ? 'sm:grid-cols-2' : ''}`, containerClass)}>
      {items.map(({ title, imageSrc, topSellingPoints, avgPrice, hasRibbon, ribbonTitle, shopButton, shopAmazonButton }) => (
        <div class={twMerge('card-hover relative flex flex-col max-w-sm p-4 border rounded shadow-lg bg-gray-800 hover:bg-gray-700 transition duration-300', cardClass)}>
          {/* Ribbon */}
          {hasRibbon && ribbonTitle && (
            <div class="ribbon-class">{ribbonTitle}</div>
          )}
          {/* Product Title */}
          {title && (
            <h3 class={twMerge(titleClass, 'mb-2 text-center')}>{title}</h3>
          )}
          {/* Product Image */}
          {imageSrc && (
            <img src={imageSrc} alt={title} class={twMerge(imageClass)} loading="lazy" />
          )}
          {/* Top Selling Points */}
          {topSellingPoints && topSellingPoints.map((point) => (
            <p class={twMerge(topSellingPointsClass)}>
              <i class="fas fa-check text-green-500 mr-2"></i>{point}
            </p>
          ))}
          {/* Average Price */}
          {avgPrice && (
            <div class="mb-4">
            <div>
              <span class="text-white">Avg Price: </span>
              <span class={twMerge(avgPriceClass)}>{avgPrice}</span>
            </div>
          </div>
          )}
          {/* Call to Action Buttons */}
          <div class="flex justify-around items-center mt-auto">
            {shopButton && (
              <Button {...shopButton} />
            )}
            {shopAmazonButton && (
              <Button {...shopAmazonButton} />
            )}
          </div>
        </div>
      ))}
    </div>
  )
}
